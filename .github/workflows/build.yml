name: Build & Release Installer

on:
  push:
    tags:
      - 'v*'  # Trigger on tag push like v1.0.0
  workflow_dispatch:  # Allow manual trigger

permissions:
  contents: write  # Grants permission to create releases

jobs:
  build:
    name: Build and Package
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.10

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Build EXE with PyInstaller
        run: pyinstaller ORMTexturePacker.spec

      - name: List dist directory contents (debug)
        run: dir dist
        shell: pwsh

      - name: Verify EXE file exists
        run: |
          if (Test-Path "dist\ORMTexturePacker.exe") {
            Write-Host "EXE found: dist\ORMTexturePacker.exe"
          } else {
            Write-Error "EXE NOT found!"
            exit 1
          }
        shell: pwsh

      - name: Install Inno Setup
        run: choco install innosetup -y

      - name: Build installer with Inno Setup
        shell: pwsh
        run: |
          & "C:\Program Files (x86)\Inno Setup 6\ISCC.exe" installer_script.iss

      - name: List Output directory contents (debug)
        run: dir Output
        shell: pwsh

      - name: Verify installer output file exists
        run: |
          if (Test-Path "Output\ORMTexturePackerInstaller.exe") {
            Write-Host "Installer found: Output\ORMTexturePackerInstaller.exe"
          } else {
            Write-Error "Installer NOT found!"
            exit 1
          }
        shell: pwsh

      - name: Upload Installer as Release Asset
        uses: softprops/action-gh-release@v1
        with:
          files: Output/ORMTexturePackerInstaller.exe
          generate_release_notes: true
          discussion_category_name: "Announcements"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
